{"ast":null,"code":"import { TwoComponentComponent } from \"../two-component/two-component.component\";\nimport { IonNavLink, IonButton, IonTitle, IonHeader, IonToolbar, IonContent, IonInput, IonModal, IonButtons, IonItem } from \"@ionic/angular/standalone\";\nimport { NgIf } from '@angular/common';\nimport { FormsModule } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction OneComponentComponent_h1_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nfunction OneComponentComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 4)(3, \"ion-button\", 5);\n    i0.ɵɵlistener(\"click\", function OneComponentComponent_ng_template_9_Template_ion_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.cancel());\n    });\n    i0.ɵɵtext(4, \"Cancelar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-title\");\n    i0.ɵɵtext(6, \"Filtra categoria\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-buttons\", 6)(8, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function OneComponentComponent_ng_template_9_Template_ion_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.confirm());\n    });\n    i0.ɵɵtext(9, \"Confirmar\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(10, \"ion-content\", 8)(11, \"ion-item\")(12, \"ion-input\", 9);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function OneComponentComponent_ng_template_9_Template_ion_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.name, $event) || (ctx_r0.name = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"strong\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.name);\n  }\n}\nexport let OneComponentComponent = /*#__PURE__*/(() => {\n  class OneComponentComponent {\n    constructor() {\n      this.component = TwoComponentComponent;\n      this.message = '';\n      this.name = '';\n    }\n    cancel() {\n      this.modal.dismiss(null, 'cancel');\n    }\n    confirm() {\n      this.modal.dismiss(this.name, 'confirm');\n    }\n    onWillDismiss(event) {\n      const ev = event;\n      if (ev.detail.role === 'confirm') {\n        if (ev.detail.data == '') {\n          this.message = '';\n        } else {\n          this.message = `Categoria: ${ev.detail.data}!`;\n        }\n      }\n    }\n    static #_ = this.ɵfac = function OneComponentComponent_Factory(t) {\n      return new (t || OneComponentComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: OneComponentComponent,\n      selectors: [[\"app-one-component\"]],\n      viewQuery: function OneComponentComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(IonModal, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 13,\n      vars: 2,\n      consts: [[\"expand\", \"block\", \"fill\", \"clear\", \"shape\", \"round\", \"id\", \"filtro\"], [4, \"ngIf\"], [\"trigger\", \"filtro\", 3, \"willDismiss\"], [\"router-direction\", \"forward\", 3, \"component\"], [\"slot\", \"start\"], [3, \"click\"], [\"slot\", \"end\"], [3, \"click\", \"strong\"], [1, \"ion-padding\"], [\"label\", \"Ingresa la categoria\", \"labelPlacement\", \"stacked\", \"type\", \"text\", \"placeholder\", \"Categoria...\", 3, \"ngModelChange\", \"ngModel\"]],\n      template: function OneComponentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n          i0.ɵɵtext(3, \"One Componente\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-button\", 0);\n          i0.ɵɵtext(6, \" Filtrar \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, OneComponentComponent_h1_7_Template, 2, 1, \"h1\", 1);\n          i0.ɵɵelementStart(8, \"ion-modal\", 2);\n          i0.ɵɵlistener(\"willDismiss\", function OneComponentComponent_Template_ion_modal_willDismiss_8_listener($event) {\n            return ctx.onWillDismiss($event);\n          });\n          i0.ɵɵtemplate(9, OneComponentComponent_ng_template_9_Template, 13, 2, \"ng-template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"ion-nav-link\", 3)(11, \"ion-button\");\n          i0.ɵɵtext(12, \"Go to Page Two\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.message !== \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"component\", ctx.component);\n        }\n      },\n      dependencies: [IonItem, IonButtons, IonModal, IonInput, IonContent, IonToolbar, IonHeader, IonTitle, IonNavLink, IonButton, FormsModule, i1.NgControlStatus, i1.NgModel, NgIf]\n    });\n  }\n  return OneComponentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}